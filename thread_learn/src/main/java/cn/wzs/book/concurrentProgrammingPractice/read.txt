并发编程实战
    第一章
        1.1、进程出现的原因：资源利用率、公平性、便利性
        1.2、线程的优势：降低开发维护成本，提升性能、降低系统负责的、模仿人类行为、提高资源利用率和系统吞吐率
        1.3、多线程可能带来的问题：
            安全性问题：共享变量导致的数据不一致问题
            活跃性问题：死锁、饥饿、活锁等问题
            性能问题:上下文切换导致的性能开销、同步措施导致的性能丢失
    第二章
        1.1、多线程同时操作共享元素，但未加同步措施，修正方式：
            不在线程之间共享该元素
            将状态变量修改为不可变变量
            增加同步措施
        1.2、线程安全性：
            一个类在无论什么情况下(单/多线程)的结果都是正确的，那么这个类就是线程安全的
            无状态的类一定是线程安全的
        1.3、原子性：操作不可再拆分
            1.3.1、竟态条件:多线程操作一个可变的共享变量导致的未知结果(基于已经失效的状态进行操作)
